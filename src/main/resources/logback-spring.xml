<?xml version="1.0" encoding="UTF-8"?>
<configuration  scan="true" scanPeriod="60 seconds" debug="false">
	<!-- 定义服务名字 -->
	<property name="APP_NAME" value="test"/>
	<!-- 定义Log文件目录 -->
    <property name="LOG_HOME" value="log/"/>
    <contextName>${APP_NAME}</contextName>
    
    <!--输出到控制台-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n</pattern>
        	<charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 输出到文件-->
    <!-- 时间滚动输出level为DEBUG日志 -->
    <appender name="DEBUG_LOG"  class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${LOG_HOME}/log_debug.log</file>
    	<encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        	<charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>
                ${LOG_HOME}/%d{yyyy-MM-dd,aux}/debug/log-debug-%d{yyyy-MM-dd_HH}.log
            </FileNamePattern>
            <!-- 日志文件保留天数 -->
            <maxHistory>5</maxHistory>
        </rollingPolicy>

        <!--日志文件最大的大小
		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			 <MaxFileSize>20MB</MaxFileSize>
		</triggeringPolicy> -->

		<filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!--要拦截的日志级别-->
            <level>DEBUG</level>
            <!--如果匹配，则禁止-->
            <onMatch>ACCEPT</onMatch>
            <!--如果不匹配，则允许记录-->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 时间滚动输出level为INFO日志 -->
    <appender name="INFO_LOG"  class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${LOG_HOME}/log_info.log</file>
    	
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        	<charset>UTF-8</charset>
        </encoder>
        
         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>
                ${LOG_HOME}/%d{yyyy-MM-dd,aux}/info/log-info-%d{yyyy-MM-dd_HH}.log
            </FileNamePattern>
            <!-- 日志文件保留天数 -->
            <maxHistory>2</maxHistory>
        </rollingPolicy>

		<!--日志文件最大的大小
		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			 <MaxFileSize>20MB</MaxFileSize> 
		</triggeringPolicy> -->
		
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!--要拦截的日志级别-->
            <level>INFO</level>
            <!--如果匹配，则禁止-->
            <onMatch>ACCEPT</onMatch>
            <!--如果不匹配，则允许记录-->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 时间滚动输出level为INFO日志 -->
    <appender name="INFO_TEST_LOG"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/log_test.log</file>

        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>
                ${LOG_HOME}/%d{yyyy-MM-dd,aux}/test/log-info-%d{yyyy-MM-dd_HH}.log
            </FileNamePattern>
            <!-- 日志文件保留天数 -->
            <maxHistory>2</maxHistory>
        </rollingPolicy>

        <!--日志文件最大的大小
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
             <MaxFileSize>20MB</MaxFileSize>
        </triggeringPolicy> -->

        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!--要拦截的日志级别-->
            <level>INFO</level>
            <!--如果匹配，则禁止-->
            <onMatch>ACCEPT</onMatch>
            <!--如果不匹配，则允许记录-->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    
    <!-- 时间滚动输出level为WARN日志 -->
    <appender name="WARN_LOG"  class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${LOG_HOME}/log_warn.log</file>
    	<encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        	<charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>
                ${LOG_HOME}/%d{yyyy-MM-dd,aux}/warn/log-warn-%d{yyyy-MM-dd_HH}.log
            </FileNamePattern>
            <!-- 日志文件保留天数 -->
            <maxHistory>2</maxHistory>
        </rollingPolicy>

        <!--日志文件最大的大小
		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>20MB</MaxFileSize>
		</triggeringPolicy>-->

		<filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!--要拦截的日志级别-->
            <level>WARN</level>
            <!--如果匹配，则禁止-->
            <onMatch>ACCEPT</onMatch>
            <!--如果不匹配，则允许记录-->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

	 <!-- 时间滚动输出level为ERROR日志 -->
    <appender name="ERROR_LOG"  class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<file>${LOG_HOME}/log_error.log</file>
    	<encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        	<charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>
                ${LOG_HOME}/%d{yyyy-MM-dd,aux}/error/log-error-%d{yyyy-MM-dd_HH}.log
            </FileNamePattern>
            <!-- 日志文件保留天数 -->
            <maxHistory>10</maxHistory>
        </rollingPolicy>
        
        <!--日志文件最大的大小
		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>20MB</MaxFileSize>
		</triggeringPolicy>-->
		
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!--要拦截的日志级别-->
            <level>ERROR</level>
            <!--如果匹配，则禁止-->
            <onMatch>ACCEPT</onMatch>
            <!--如果不匹配，则允许记录-->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- name 指定约束的包或者类，activity表示是否向上级传递日志信息-->
    <logger name="test" additivity="false" level="INFO">
        <appender-ref ref="INFO_TEST_LOG" />
    </logger>

    <root level="INFO">
        <appender-ref ref="STDOUT"/>
<!--        <appender-ref ref="DEBUG_LOG" />-->
        <appender-ref ref="INFO_LOG" />
<!--        <appender-ref ref="WARN_LOG" />-->
        <appender-ref ref="ERROR_LOG" />
    </root>

</configuration>
